{"version":3,"sources":["components/UI/modal/MyModal.module.css","components/UI/button/MyButton.module.css","components/UI/input/MyInput.module.css","components/UI/loader/Loader.module.css","components/UI/select/MySelect.module.css","context/index.js","components/UI/button/MyButton.jsx","components/UI/input/MyInput.jsx","API/PostService.js","components/UI/loader/Loader.jsx","hooks/useFetching.js","components/PostItem.jsx","components/PostList.jsx","components/PostForm.jsx","components/UI/select/MySelect.jsx","components/PostFilter.jsx","components/UI/modal/MyModal.jsx","hooks/usePosts.js","utils/pages.js","router/index.js","pages/About.jsx","pages/Posts.jsx","hooks/useObserver.js","pages/PostIdPage.jsx","pages/Login.jsx","components/AppRouter.jsx","components/UI/Footer/Footer.jsx","components/UI/Navbar/Navbar.jsx","App.js","index.js"],"names":["module","exports","AuthContext","createContext","MyButton","children","props","className","classes","myBtn","MyInput","React","forwardRef","ref","myInput","PostService","limit","page","axios","get","params","_limit","_page","response","id","Loader","loader","useFetching","callback","useState","isLoading","setIsLoading","error","setError","a","message","PostItem","router","useHistory","number","post","title","body","onClick","push","remove","PostList","posts","length","style","textAlign","TransitionGroup","map","index","CSSTransition","timeout","classNames","PostForm","create","setPost","value","onChange","e","target","type","placeholder","preventDefault","newPost","Date","now","MySelect","options","defaultValue","mySelect","disabled","option","name","PostFilter","filter","setFilter","query","sort","selectedSort","MyModal","visible","setVisible","rootClasses","myModal","active","join","myModalContent","stopPropagation","usePosts","sortedPosts","useMemo","b","localeCompare","useSortPosts","toLowerCase","includes","getPageCount","totalCount","Math","ceil","privateRoutes","path","component","exact","setPosts","modal","setModal","totalPages","setTotalPages","setPage","sortedAndSearchedPosts","lastElement","useRef","getAll","data","headers","fetchPosts","isPostsLoading","postError","canLoad","observer","useEffect","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","marginTop","margin","p","display","justifyContent","useParams","comments","setComments","getById","fetchPostById","getCommentsByPostId","fetchComments","comm","email","publickRoutes","setIsAuth","useContext","onSubmit","event","localStorage","setItem","AppRouter","isAuth","route","to","Footer","Navbar","removeItem","App","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c451fee9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__2tyRE\",\"myModalContent\":\"MyModal_myModalContent__1pOza\",\"active\":\"MyModal_active__1l3mE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__1rqi-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__1bS5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1bkL5\",\"rotate\":\"Loader_rotate__23CcD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mySelect\":\"MySelect_mySelect__3dGwa\"};","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);","import classes from './MyButton.module.css';\n\n\nexport default function MyButton({ children, ...props }) {\n  return (\n    <button {...props} className={classes.myBtn}>\n      {children}\n    </button>\n  );\n}","import classes from './MyInput.module.css'\nimport React from 'react';\n\nconst MyInput = React.forwardRef((props, ref) => {\n  return (\n    <input ref={ref} className={classes.myInput} {...props} />\n  );\n});\n\nexport default MyInput;","import axios from 'axios';\n\nexport default class PostService {\n  static async getAll(limit=10,page=1) {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n      params: {\n        _limit: limit,\n        _page: page\n      }\n    });\n    return response;     \n  }\n\n  static async getById(id) {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/posts/' + id);\n    return response;     \n  }\n\n  static async getCommentsByPostId(id) {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`);\n    return response;     \n  }\n\n}","import classes from './Loader.module.css';\n\n\nexport default function Loader() {\n  return (\n    <div className={classes.loader}>\n\n    </div>\n  );\n}","import { useState } from \"react\";\n\nexport default function useFetching(callback) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  \n  const fetching = async (...args) => {\n    try {\n      setIsLoading(true);\n      await callback(...args);\n    } catch(e) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n  return [fetching, isLoading, error];\n}\n\n","import { useHistory } from 'react-router';\nimport MyButton from './UI/button/MyButton';\n\n\nexport default function PostItem(props) {\n\n  const router = useHistory();\n\n  return (\n    <div className=\"post\">\n      <div className=\"post__content\">\n        <strong>{props.number}. <span>{props.post.title}</span></strong>\n        <div>{props.post.body}</div>\n      </div>\n      <div className=\"post__btns\">\n        <MyButton className=\"post__btn\" onClick={() => router.push(`/posts/${props.post.id}`)}>Open</MyButton>\n        <MyButton onClick={() => props.remove(props.post)}>Delate</MyButton>\n      </div>\n    </div>\n  );\n}\n\n","import { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport PostItem from './PostItem';\n\nexport default function PostList({ posts, title, remove }) {\n\n  if (!posts.length) /*не равно 0*/ {\n    return (\n      <h1 style={{ textAlign: 'center' }}>Posts not found!</h1>\n    );\n  }\n\n  return (\n    <div>\n      <h1 style={{ textAlign: 'center' }}>{title}</h1>\n      <TransitionGroup>\n        {posts.map((post, index) =>\n          <CSSTransition\n            key={post.id}\n            timeout={500}\n            classNames=\"post\">\n            <PostItem remove={remove} number={index + 1} post={post} />\n          </CSSTransition>\n        )}\n      </TransitionGroup>\n    </div>\n  );\n};","import MyButton from './UI/button/MyButton';\nimport MyInput from './UI/input/MyInput';\nimport { useState } from \"react\";\n\nexport default function PostForm({ create }) {\n\n  const [post, setPost] = useState({ title: '', body: '' });\n\n  function addNewPost(e) {\n    e.preventDefault();\n    const newPost = { ...post, id: Date.now() };\n    create(newPost);\n    setPost({ title: '', body: '' });\n  }\n\n  return (\n    <form>\n      {/* управляемый компонент */}\n      <MyInput value={post.title} onChange={e => setPost({ ...post, title: e.target.value })} type=\"text\" placeholder=\"Post name\" />\n      <MyInput value={post.body} onChange={e => setPost({ ...post, body: e.target.value })} type=\"text\" placeholder=\"Post description\" />\n      <MyButton onClick={addNewPost} >Create post</MyButton>\n    </form>\n  );\n}","import classes from './MySelect.module.css';\n\nexport default function MySelect({ options, defaultValue, value, onChange }) {\n  return (\n    <select\n      className={classes.mySelect}\n      value={value}\n      onChange={e => onChange(e.target.value)}\n    >\n      <option disabled value=\"\">{defaultValue}</option>\n      {options.map(option =>\n        <option key={option.value} value={option.value}>\n          {option.name}\n        </option>\n      )}\n    </select>\n  );\n}","import MySelect from './UI/select/MySelect';\nimport MyInput from './UI/input/MyInput';\n\n\nexport default function PostFilter({ filter, setFilter }) {\n  return (\n    <div>\n      <MyInput\n        placeholder=\"Find...\"\n        value={filter.query}\n        onChange={e => setFilter({ ...filter, query: e.target.value })}\n      />\n      <MySelect\n        value={filter.sort}\n        onChange={selectedSort => setFilter({ ...filter, sort: selectedSort })}\n        defaultValue=\"Sort on\"\n        options={[\n          { value: 'title', name: 'Name' },\n          { value: 'body', name: 'Description' }\n        ]}\n      />\n    </div>\n  );\n}","import classes from './MyModal.module.css';\n\nexport default function MyModal({ children, visible, setVisible }) {\n\n  const rootClasses = [classes.myModal];\n  if (visible) {\n    rootClasses.push(classes.active);\n  }\n\n  return (\n    <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\n      <div className={classes.myModalContent} onClick={(e) => e.stopPropagation()}>\n        {children}\n      </div>\n    </div>\n  );\n}","import { useMemo } from \"react\";\n\nfunction useSortPosts(posts, sort) {\n    const sortedPosts = useMemo(() => {\n      if(sort) {\n        return [...posts].sort((a,b) => a[sort].localeCompare(b[sort]));\n      }\n      return posts;\n    },[sort, posts]);\n\n    return sortedPosts;\n}\n\nexport default function usePosts(posts, sort, query){\n  const sortedPosts = useSortPosts(posts, sort);\n  \n  const sortedAndSearchedPosts = useMemo(() => {\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(query));\n  },[query, sortedPosts])\n\n  return sortedAndSearchedPosts;\n}","\nexport default function getPageCount(totalCount, limit) {\n  return Math.ceil(totalCount / limit);\n}\n\nexport function getPagesArray(totalPages) {\n  let result = [];\n  for (let i = 0; i < totalPages; i++) {\n    result.push(i + 1);\n  }\n  return result;\n}","import About from \"../pages/About\";\nimport Login from \"../pages/Login\";\nimport PostIdPage from \"../pages/PostIdPage\";\nimport Posts from \"../pages/Posts\";\n\nexport const privateRoutes = [\n  {path: '/about', component: About, exact: true},\n  {path: '/posts', component: Posts, exact: true},\n  {path: '/posts/:id', component: PostIdPage, exact: true}\n]\n\nexport const publickRoutes = [\n  {path: '/login', component: Login, exact: true},\n]","\nexport default function About() {\n  return (\n    <div className=\"about-app\">\n      <h1>This application implements this functionality:</h1>\n      <ul>\n        <li>Registration form, which gives access only to registered user.</li>\n        <li>Endless loading of posts, when you scroll to the last post are load a new portion of posts.</li>\n        <li>Also, you may create a post to push the button \"Create post\".</li>\n        <li>Implemented searching to words, you need a start to enter the words in the searching input.</li>\n        <li>You may filter posts on name or description.</li>\n        <li>You may open and delete posts, pushing these buttons.</li>\n      </ul>\n    </div>\n  );\n}","import '../styles/App.css'\nimport { useState, useEffect, useRef } from \"react\";\nimport PostList from '../components/PostList';\nimport PostForm from '../components/PostForm';\nimport PostFilter from '../components/PostFilter';\nimport MyModal from '../components/UI/modal/MyModal';\nimport MyButton from '../components/UI/button/MyButton';\nimport usePosts from '../hooks/usePosts';\nimport PostService from '../API/PostService';\nimport Loader from '../components/UI/loader/Loader';\nimport useFetching from '../hooks/useFetching';\nimport getPageCount from '../utils/pages';\n//import Pagination from '../components/UI/pagination/Pagination';\nimport { useObserver } from '../hooks/useObserver';\n//import MySelect from '../components/UI/select/MySelect';\n\n\nexport default function Posts() {\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({ sort: '', query: '' });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const lastElement = useRef();\n\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\n    const response = await PostService.getAll(limit, page);\n    setPosts([...posts, ...response.data]);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  })\n\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => {\n    setPage(page + 1);\n  })\n\n  useEffect(() => {\n    fetchPosts(limit, page);\n  }, [page, limit])\n\n  function createPost(newPost) {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  }\n\n  function removePost(post) {\n    setPosts(posts.filter(p => p.id !== post.id));\n  }\n\n  // function changePage(page) {\n  //   setPage(page);\n  // }\n\n\n  return (\n    <div className=\"App\">\n      <MyButton style={{ marginTop: 30 }} onClick={() => setModal(true)}>Create post</MyButton>\n      <MyModal visible={modal} setVisible={setModal}>\n        <PostForm create={createPost} />\n      </MyModal>\n      <hr style={{ margin: '15px 0' }} />\n      <PostFilter filter={filter} setFilter={setFilter} />\n      {/* <MySelect\n        value={limit}\n        onChange={value => setLimit(value)}\n        defaultValue=\"Elements on page\"\n        options={[\n          { value: 5, name: '5' },\n          { value: 10, name: '10' },\n          { value: 25, name: '25' },\n          { value: -1, name: 'All posts' }\n        ]}\n      /> */}\n      {postError &&\n        <h1 style={{ textAlign: 'center', marginTop: '30px' }}>Error! {postError}</h1>\n      }\n      <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Post list\" />\n      <div ref={lastElement} className=\"post__last-element\" />\n      {isPostsLoading &&\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: 30 }}><Loader /></div>\n      }\n      {/* <Pagination page={page} changePage={changePage} totalPages={totalPages} /> */}\n    </div>\n  );\n}","import { useEffect, useRef } from \"react\";\n\nexport function useObserver(ref, canLoad, isLoading, callback) {\n  const observer = useRef();\n  useEffect(() => {\n    if (isLoading) return;\n    if (observer.current) observer.current.disconnect();\n    var cb = function (entries, observer) {\n      if (entries[0].isIntersecting && canLoad) {\n        callback();\n      }\n    };\n    observer.current = new IntersectionObserver(cb);\n    observer.current.observe(ref.current);\n  }, [isLoading])\n}","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport PostService from \"../API/PostService\";\nimport Loader from \"../components/UI/loader/Loader\";\nimport useFetching from \"../hooks/useFetching\";\n\nexport default function PostIdPage() {\n  const params = useParams();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([])\n  const [fetchPostById, isLoading] = useFetching(async (id) => {\n    const response = await PostService.getById(id);\n    setPost(response.data);\n  });\n\n  const [fetchComments] = useFetching(async (id) => {\n    const response = await PostService.getCommentsByPostId(id);\n    setComments(response.data);\n  });\n\n  useEffect(() => {\n    fetchPostById(params.id);\n    fetchComments(params.id);\n  }, [])\n\n  return (\n    <div className=\"post__id-page\">\n      <h2>You opened the page post with ID {params.id}!</h2>\n      {isLoading\n        ? <Loader />\n        : <div className=\"post__id-page_title\">{post.id}. {post.title}</div>\n      }\n      <h3 className=\"post__id-page_coments\">Customer comments:</h3>\n      {isLoading\n        ? <Loader />\n        : <div>\n          {comments.map(comm =>\n            <div className=\"post__id-page_coment\" key={comm.id} style={{ marginTop: 15 }}>\n              <h4>{comm.email}</h4>\n              <div>{comm.body}</div>\n            </div>\n\n          )}\n        </div>\n      }\n    </div>\n  );\n}","import { useContext } from \"react\";\nimport MyButton from \"../components/UI/button/MyButton\";\nimport MyInput from \"../components/UI/input/MyInput\";\nimport { AuthContext } from \"../context\";\n\nexport default function Login() {\n  const { setIsAuth } = useContext(AuthContext);\n  const login = event => {\n    event.preventDefault();\n    setIsAuth(true);\n    localStorage.setItem('auth', 'true');\n  }\n\n  return (\n    <div className=\"login-page\">\n      <h1>Login in</h1>\n      <p>since backend not using you may push button Enter without login and password!</p>\n      <form onSubmit={login}>\n        <MyInput type=\"text\" placeholder=\"Enter login\" />\n        <MyInput type=\"password\" placeholder=\"Enter password\" />\n        <MyButton>Enter</MyButton>\n      </form>\n    </div>\n  );\n}","import { useContext } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { AuthContext } from '../context';\nimport { publickRoutes, privateRoutes } from '../router';\nimport Loader from './UI/loader/Loader';\n\nexport default function AppRouter() {\n  const { isAuth, isLoading } = useContext(AuthContext);\n\n  if (isLoading) {\n    return <Loader />\n  }\n\n  return (\n    isAuth\n      ?\n      <Switch>\n        {privateRoutes.map(route =>\n          <Route key={route.path} component={route.component} path={route.path} exact={route.exact} />\n        )\n        }\n        <Redirect to='/posts' />\n      </Switch >\n      :\n      <Switch>\n        {publickRoutes.map(route =>\n          <Route key={route.path} component={route.component} path={route.path} exact={route.exact} />\n        )\n        }\n        <Redirect to='/login' />\n      </Switch >\n  );\n}","\nexport default function Footer() {\n\n  return (\n    <footer className=\"footer\">\n      <p><span>&#169;</span> React App, 2021</p>\n    </footer>\n  );\n}","import { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AuthContext } from '../../../context';\nimport MyButton from '../button/MyButton';\n\nexport default function Navbar() {\n  const { setIsAuth } = useContext(AuthContext);\n\n  const logout = () => {\n    setIsAuth(false);\n    localStorage.removeItem('auth');\n  }\n\n  return (\n    <div className='navbar'>\n      <MyButton onClick={logout}>Out</MyButton>\n      <div className=\"navbar__links\">\n        <NavLink className=\"navbar__link\" to=\"/about\">About</NavLink>\n        <NavLink className=\"navbar__link\" to=\"/posts\">Posts</NavLink>\n      </div>\n    </div>\n  );\n}","import { useEffect, useState } from 'react';\nimport { BrowserRouter} from 'react-router-dom';\nimport AppRouter from './components/AppRouter';\nimport Footer from './components/UI/Footer/Footer';\nimport Navbar from './components/UI/Navbar/Navbar';\nimport { AuthContext } from './context';\nimport './styles/App.css';\n\n\nexport default function App() {\n  const [isAuth, setIsAuth] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  \n  useEffect(() => {\n    if (localStorage.getItem('auth')) {\n      setIsAuth(true);\n    }\n    setIsLoading(false);\n  },[])\n\n  return (\n    <AuthContext.Provider value={{\n      isAuth,\n      setIsAuth,\n      isLoading\n    }}>\n      <BrowserRouter>\n      <Navbar/>\n      <AppRouter/>\n    </BrowserRouter>\n    <Footer/>\n    </AuthContext.Provider>\n  );\n}\n\n\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}